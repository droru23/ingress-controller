apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: ingress-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: simpleingresses.webapp.my.domain
spec:
  group: webapp.my.domain
  names:
    kind: SimpleIngress
    listKind: SimpleIngressList
    plural: simpleingresses
    singular: simpleingress
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: SimpleIngress is the Schema for the simpleingresses API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: SimpleIngressSpec defines the desired state of SimpleIngress
          properties:
            host:
              description: Foo is an example field of SimpleIngress. Edit SimpleIngress_types.go
                to remove/update
              type: string
            svcName:
              type: string
          type: object
        status:
          description: SimpleIngressStatus defines the observed state of SimpleIngress
          type: object
      type: object
  version: v1
  versions:
    - name: v1
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ingress-controller-leader-election-role
  namespace: ingress-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps/status
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: ingress-controller-manager-role
rules:
  - apiGroups:
      - webapp.my.domain
    resources:
      - simpleingresses
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - webapp.my.domain
    resources:
      - simpleingresses/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ingress-controller-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: ingress-controller-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ingress-controller-leader-election-rolebinding
  namespace: ingress-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-controller-leader-election-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: ingress-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-controller-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-controller-manager-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: ingress-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-controller-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-controller-proxy-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: ingress-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: ingress-controller-controller-manager-metrics-service
  namespace: ingress-system
spec:
  ports:
    - name: https
      port: 8443
      targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: ingress-controller-controller-manager
  namespace: ingress-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: testdror
      control-plane: controller-manager
  template:
    metadata:
      labels:
        app: testdror
        control-plane: controller-manager
    spec:
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=10
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
        - args:
            - --metrics-addr=127.0.0.1:8080
            - --enable-leader-election
          command:
            - /manager
          image: drorhub/dror-ass:16
          name: manager
          ports:
            - containerPort: 80
          resources:
            limits:
              cpu: 100m
              memory: 30Mi
            requests:
              cpu: 100m
              memory: 20Mi
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: test
  namespace: ingress-system
spec:
  type: NodePort
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3000
      nodePort: 31321
  selector:
    app: testdror
